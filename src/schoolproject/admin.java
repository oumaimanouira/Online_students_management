/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolproject;

import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;

/**
 *
 * @author ASUS
 */
public class admin extends javax.swing.JFrame {

    /**
     * Creates new form admin
     */
     Connection con=null;
    Statement s;
    ResultSet r;
    DefaultTableModel model=new DefaultTableModel();
    public admin() {
        initComponents();
       con=new DbConnect().connect();
     
    model.addColumn("First name");   
    model.addColumn("Last name"); 
    model.addColumn("CIN");
    model.addColumn("phoneNumber"); 
    model.addColumn("Email adress"); 
    model.addColumn("Password"); 
    model.addColumn("Age"); 
    model.addColumn("Birth of date"); 
    model.addColumn("Gender"); 
    model.addColumn("Grade");   
    model.addColumn("Major");   
   
    try
    {
        model.setRowCount(0);
        s=con.createStatement();
        ResultSet Rs= s.executeQuery("Select * from student");
        while(Rs.next())
        {
            model.addRow(new Object[]{Rs.getString("firstName"),Rs.getString("lastName"),Rs.getString("CIN"),Rs.getString("phoneNumber"),Rs.getString("email"),Rs.getString("studentPassword"),Rs.getString("age"),Rs.getString("birthDate"),Rs.getString("gender"),Rs.getString("grade"),Rs.getString("major")});
        }
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(rootPane, e);
    }
    studentsTable.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordField = new javax.swing.JPasswordField();
        editBtn = new javax.swing.JButton();
        researchBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        emailField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        phoneNumberField = new javax.swing.JTextField();
        firstNameField = new javax.swing.JTextField();
        majorField = new javax.swing.JTextField();
        cinField = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        birthDateField = new javax.swing.JTextField();
        genderBox = new javax.swing.JComboBox<>();
        gradeBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentsTable = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        requiredCinField = new javax.swing.JTextField();
        checkGradesBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administration");
        setPreferredSize(new java.awt.Dimension(1337, 731));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(null);

        passwordField.setForeground(new java.awt.Color(204, 204, 204));
        passwordField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        getContentPane().add(passwordField);
        passwordField.setBounds(10, 260, 300, 30);

        editBtn.setBackground(new java.awt.Color(255, 255, 255));
        editBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editBtn.setForeground(new java.awt.Color(0, 0, 54));
        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        editBtn.setText("Edit");
        editBtn.setBorderPainted(false);
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtnMouseClicked(evt);
            }
        });
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        getContentPane().add(editBtn);
        editBtn.setBounds(160, 440, 130, 40);

        researchBtn.setBackground(new java.awt.Color(255, 255, 255));
        researchBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        researchBtn.setForeground(new java.awt.Color(0, 0, 54));
        researchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/research.png"))); // NOI18N
        researchBtn.setText("Research");
        researchBtn.setBorderPainted(false);
        researchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                researchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(researchBtn);
        researchBtn.setBounds(10, 560, 130, 40);

        refreshBtn.setBackground(new java.awt.Color(255, 255, 255));
        refreshBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(0, 0, 54));
        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refresh.png"))); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.setBorderPainted(false);
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        getContentPane().add(refreshBtn);
        refreshBtn.setBounds(160, 500, 130, 40);

        removeBtn.setBackground(new java.awt.Color(255, 255, 255));
        removeBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeBtn.setForeground(new java.awt.Color(0, 0, 54));
        removeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/remove.png"))); // NOI18N
        removeBtn.setText("Remove");
        removeBtn.setBorderPainted(false);
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(removeBtn);
        removeBtn.setBounds(10, 500, 130, 40);

        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });
        getContentPane().add(emailField);
        emailField.setBounds(10, 200, 300, 30);

        lastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(lastNameField);
        lastNameField.setBounds(170, 80, 140, 30);

        phoneNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberFieldActionPerformed(evt);
            }
        });
        getContentPane().add(phoneNumberField);
        phoneNumberField.setBounds(170, 140, 140, 30);

        firstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(firstNameField);
        firstNameField.setBounds(10, 80, 140, 30);

        majorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                majorFieldActionPerformed(evt);
            }
        });
        getContentPane().add(majorField);
        majorField.setBounds(90, 380, 220, 30);

        cinField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cinFieldActionPerformed(evt);
            }
        });
        getContentPane().add(cinField);
        cinField.setBounds(10, 140, 140, 30);

        ageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageFieldActionPerformed(evt);
            }
        });
        getContentPane().add(ageField);
        ageField.setBounds(10, 320, 60, 30);

        birthDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthDateFieldActionPerformed(evt);
            }
        });
        getContentPane().add(birthDateField);
        birthDateField.setBounds(90, 320, 100, 30);

        genderBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));
        genderBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderBoxActionPerformed(evt);
            }
        });
        getContentPane().add(genderBox);
        genderBox.setBounds(210, 320, 100, 30);

        gradeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A1", "A2", "A3" }));
        getContentPane().add(gradeBox);
        gradeBox.setBounds(10, 380, 60, 30);

        studentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First name", "Last name", "CIN", "Phone number", "Email address", "Password", "Age", "Date of birth", "Gender", "Grade", "Major"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(studentsTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(330, 40, 990, 350);

        jLabel28.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Major");
        getContentPane().add(jLabel28);
        jLabel28.setBounds(90, 350, 130, 40);

        addBtn.setBackground(new java.awt.Color(255, 255, 255));
        addBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(0, 0, 54));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/plus.png"))); // NOI18N
        addBtn.setText("Add");
        addBtn.setBorderPainted(false);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn);
        addBtn.setBounds(10, 440, 130, 40);

        jLabel27.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Grade");
        getContentPane().add(jLabel27);
        jLabel27.setBounds(10, 350, 130, 40);

        jLabel26.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Gender");
        getContentPane().add(jLabel26);
        jLabel26.setBounds(210, 290, 80, 40);

        jLabel25.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Date of birth");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(90, 290, 130, 40);

        jLabel24.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Age");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(10, 290, 130, 40);

        jLabel22.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Phone number\n");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(170, 110, 130, 40);

        jLabel23.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("CIN ");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(10, 110, 130, 40);

        jLabel21.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Last name");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(170, 50, 130, 40);

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/arrow.png"))); // NOI18N
        backBtn.setBorderPainted(false);
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });
        getContentPane().add(backBtn);
        backBtn.setBounds(10, 20, 20, 20);

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("First name ");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 50, 130, 40);

        jLabel16.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Password");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(10, 240, 91, 16);

        requiredCinField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        requiredCinField.setForeground(new java.awt.Color(0, 0, 54));
        requiredCinField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        requiredCinField.setText("Enter CIN");
        requiredCinField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requiredCinFieldActionPerformed(evt);
            }
        });
        getContentPane().add(requiredCinField);
        requiredCinField.setBounds(160, 560, 130, 40);

        checkGradesBtn.setBackground(new java.awt.Color(255, 255, 255));
        checkGradesBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkGradesBtn.setForeground(new java.awt.Color(0, 0, 54));
        checkGradesBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/approved.png"))); // NOI18N
        checkGradesBtn.setText("Check Grades");
        checkGradesBtn.setBorderPainted(false);
        checkGradesBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkGradesBtnMouseClicked(evt);
            }
        });
        getContentPane().add(checkGradesBtn);
        checkGradesBtn.setBounds(70, 620, 170, 40);

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Email address");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 170, 130, 40);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/bleu.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(-30, 0, 1460, 740);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void deplace(int i)
    {
        try
        {
            cinField.setText(model.getValueAt(i,2).toString());
            firstNameField.setText(model.getValueAt(i,0).toString());
            lastNameField.setText(model.getValueAt(i,1).toString());
            ageField.setText(model.getValueAt(i,6).toString());
            birthDateField.setText(model.getValueAt(i,7).toString());
            genderBox.setSelectedItem(model.getValueAt(i,8).toString());
            phoneNumberField.setText(model.getValueAt(i,3).toString());
            emailField.setText(model.getValueAt(i,4).toString());
            gradeBox.setSelectedItem(model.getValueAt(i,9).toString().toUpperCase());
            majorField.setText(model.getValueAt(i,10).toString());
            passwordField.setText(model.getValueAt(i,5).toString());
        }
        catch(Exception e)
                {
                    System.err.println(e);
                    JOptionPane.showMessageDialog(null,"erreur de deplacement "+e.getLocalizedMessage());
                }
    }
     public void refresh()
     {
            try
    {   model.setRowCount(0);
        ResultSet Rs= s.executeQuery("Select * from student");
        while(Rs.next())
        {
            model.addRow(new Object[]{Rs.getString("firstName"),Rs.getString("lastName"),Rs.getString("CIN"),Rs.getString("phoneNumber"),Rs.getString("email"),Rs.getString("studentPassword"),Rs.getString("age"),Rs.getString("birthDate"),Rs.getString("gender"),Rs.getString("grade"),Rs.getString("major")});
        }
    }
    catch(Exception e)
    {
        System.err.println(e);
    }
    studentsTable.setModel(model);
     }
    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFieldActionPerformed

    private void lastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameFieldActionPerformed

    private void phoneNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberFieldActionPerformed

    private void firstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameFieldActionPerformed

    private void majorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_majorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_majorFieldActionPerformed

    private void cinFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cinFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cinFieldActionPerformed

    private void ageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageFieldActionPerformed

    private void birthDateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthDateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthDateFieldActionPerformed

    private void genderBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderBoxActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        try
        {
           if(JOptionPane.showConfirmDialog(null,"Confirmer la modification","modification",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
                   {
                       s.executeUpdate("UPDATE student SET firstName='"+firstNameField.getText()+"',lastName='"+lastNameField.getText()+"',age='"+ageField.getText()+"',birthDate='"+birthDateField.getText()+"',gender='"+genderBox.getSelectedItem().toString()+"',phoneNumber='"+phoneNumberField.getText()+"',email='"+emailField.getText()+"',grade='"+gradeBox.getSelectedItem().toString()+"',major='"+majorField.getText()+"',studentPassword='"+passwordField.getText()+"' WHERE CIN="+cinField.getText());
                   }
           refresh();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"erreur de modification!!"+e.getMessage());
            System.err.println(e);
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        
        String CIN=cinField.getText();
        String firstName=firstNameField.getText();
        String lastName=lastNameField.getText();
        String phoneNumber=phoneNumberField.getText();
        String email=emailField.getText();
        String studentPassword=passwordField.getText();
        String age=ageField.getText();
        String birthDate=birthDateField.getText();
        String gender=genderBox.getSelectedItem().toString();
        String grade=gradeBox.getSelectedItem().toString();
        String major=majorField.getText();

        String requete="insert into student(CIN,firstName,lastName,age,birthDate,gender,phoneNumber,email,grade,major,studentPassword)VALUES('"+CIN+"','"+firstName+"','"+lastName+"','"+age+"','"+birthDate+"','"+gender+"','"+phoneNumber+"','"+email+"','"+grade+"','"+major+"','"+studentPassword+"')";
        try
        {
            s.executeUpdate(requete);
            JOptionPane.showMessageDialog(null,"l'étudiant est ajouté avec succès!");
            cinField.setText("");
            firstNameField.setText("");
            lastNameField.setText("");
            ageField.setText("");
            birthDateField.setText("");
            genderBox.setSelectedItem(2);
            phoneNumberField.setText("");
            emailField.setText("");
            gradeBox.setSelectedItem(2);
            majorField.setText("");
            passwordField.setText("");
            refresh();
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void editBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseClicked
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        this.setVisible(false);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                login adminPage = new login();
                adminPage.setVisible(true);
            }
        });
    }//GEN-LAST:event_editBtnMouseClicked

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:
         try
        {
            if (JOptionPane.showConfirmDialog(null,"attention vous avez supprimer un etudient, est ce que tu et sure?","supprimer etudiant",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
            if(cinField.getText().length()!=0)
            {
                s.executeUpdate("Delete From student where CIN = "+cinField.getText()); 
                refresh();
            }
            else
            {
                JOptionPane.showMessageDialog(null,"veuillez SVP remplir le champ CIN !");
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"eurreur de supprimer \n"+e.getMessage());
        }
    }//GEN-LAST:event_removeBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        refresh();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void researchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_researchBtnActionPerformed
        try
       {
           model.setRowCount(0);
           {
               r=s.executeQuery("Select * From student WHERE CIN = '"+requiredCinField.getText()+"'");
  
           }
          
           while(r.next())
           {
               Object [] etudiant={r.getInt(1),r.getString(2),r.getString(3),r.getInt(4),r.getDate(5),r.getString(6),r.getInt(7),r.getString(8),r.getString(9),r.getString(10),r.getString(11)};
               model.addRow(etudiant);
           }
           if (model.getRowCount()==0){JOptionPane.showMessageDialog(null,"il y a aucun student");}
           else{int i=0;
           deplace(i);
           }
               
       }
       catch(Exception e)
       {
           System.err.println(e);
           JOptionPane.showMessageDialog(null,e.getMessage());
       }
    }//GEN-LAST:event_researchBtnActionPerformed

    private void requiredCinFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requiredCinFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requiredCinFieldActionPerformed

    private void studentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentsTableMouseClicked
               try
        {
            int i =studentsTable.getSelectedRow();
            deplace(i);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"erreur de deplacement "+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_studentsTableMouseClicked

    private void checkGradesBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkGradesBtnMouseClicked
      String cinToUse = requiredCinField.getText();   
       /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                gradePageAdmin viewGradePage = new gradePageAdmin(Integer.parseInt(cinToUse));
                viewGradePage.setVisible(true);
            }
        });
    }//GEN-LAST:event_checkGradesBtnMouseClicked

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        // TODO add your handling code here:
                this.setVisible(false);
/* Create and display the form */
java.awt.EventQueue.invokeLater(new Runnable() 
{
    
public void run() 
{
loginAdmin back = new loginAdmin();
back.setVisible(true);
}
});
    }//GEN-LAST:event_backBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField ageField;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField birthDateField;
    private javax.swing.JButton checkGradesBtn;
    private javax.swing.JTextField cinField;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JComboBox<String> genderBox;
    private javax.swing.JComboBox<String> gradeBox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JTextField majorField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField phoneNumberField;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton removeBtn;
    private javax.swing.JTextField requiredCinField;
    private javax.swing.JButton researchBtn;
    private javax.swing.JTable studentsTable;
    // End of variables declaration//GEN-END:variables
}
