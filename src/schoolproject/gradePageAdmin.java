/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolproject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class gradePageAdmin extends javax.swing.JFrame {
    Connection conn = null ;
    int studentId;

    /**
     * Creates new form gradePageAdmin
     */
    public gradePageAdmin() {
        initComponents();
    }
public gradePageAdmin(int id )
{
    initComponents();
    this.conn = new DbConnect().connect();
    this.studentId =id ;
    try
    {
    PreparedStatement stmt;
    stmt = this.conn.prepareStatement("Select firstName,lastName from student where CIN = ? ");
    stmt.setInt(1,this.studentId);
    ResultSet result =stmt.executeQuery();
    result.next();
    studentLabel.setText("Grades of "+result.getString("firstName")+" "+result.getString("lastName"));
    getGradesData();
    getSubjectsData();
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(null,e);
    }
}
 public void getGradesData(){
        DefaultTableModel model=new DefaultTableModel();
        try{
        model.addColumn("Subject");   
        model.addColumn("Ds"); 
        model.addColumn("Exam");
        model.addColumn("Tp"); 
        model.addColumn("Average"); 

        model.setRowCount(0);
        Statement s;
        s=conn.createStatement();
        ResultSet Rs= s.executeQuery("Select * from note where studentId = "+ this.studentId);
        while(Rs.next())
        {
            Statement stmt;
            stmt = conn.createStatement();
            ResultSet result = stmt.executeQuery("select subjectName from subject where id="+Rs.getInt("subjectId"));
            result.next();
            model.addRow(new Object[]{result.getString("subjectName"),Rs.getFloat("dsGrade"),Rs.getFloat("examGrade"),Rs.getFloat("tpGrade"),Rs.getFloat("average")});
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        studentInfoTable.setModel(model);
    }
    public void getSubjectsData(){
        try{
            DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
            Statement s;
            s = conn.createStatement();
            ResultSet rs = s.executeQuery("Select major from student where cin="+this.studentId);
            rs.next();
            PreparedStatement stmt;
            stmt = conn.prepareStatement("select subjectId from majorsubject where designation = ?");
            String major = (String)rs.getString("major");
            stmt.setString(1, major);
            JOptionPane.showMessageDialog(null, rs.getString("major"));            
            ResultSet result = stmt.executeQuery();
            JOptionPane.showMessageDialog(null, "done");
            while(result.next()){
                Statement subjectsNamesStmt;
                subjectsNamesStmt = conn.createStatement(); 
                ResultSet subjectsNamesResult = subjectsNamesStmt.executeQuery("select subjectName from subject where id="+result.getInt("subjectId"));
                subjectsNamesResult.next();
                comboBoxModel.addElement(new String(subjectsNamesResult.getString("subjectName")));
            }
            subjectsBox.setModel(comboBoxModel);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentLabel = new javax.swing.JLabel();
        subjectsBox = new javax.swing.JComboBox<>();
        calculateBtn = new javax.swing.JButton();
        gradeField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        addGradeBtn = new javax.swing.JButton();
        testBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentInfoTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Grades configuration");
        setPreferredSize(new java.awt.Dimension(778, 450));
        getContentPane().setLayout(null);

        studentLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        studentLabel.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(studentLabel);
        studentLabel.setBounds(90, 60, 640, 50);

        subjectsBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        subjectsBox.setForeground(new java.awt.Color(0, 0, 54));
        subjectsBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(subjectsBox);
        subjectsBox.setBounds(350, 290, 110, 40);

        calculateBtn.setBackground(new java.awt.Color(255, 255, 255));
        calculateBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        calculateBtn.setForeground(new java.awt.Color(0, 0, 54));
        calculateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/calculator.png"))); // NOI18N
        calculateBtn.setText("Calculate Average");
        calculateBtn.setBorderPainted(false);
        calculateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateBtnMouseClicked(evt);
            }
        });
        calculateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(calculateBtn);
        calculateBtn.setBounds(10, 340, 190, 40);

        gradeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gradeField.setForeground(new java.awt.Color(0, 0, 54));
        gradeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gradeField.setText("Enter Grade");
        getContentPane().add(gradeField);
        gradeField.setBounds(470, 290, 100, 40);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/admin5.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 50, 90, 70);

        addGradeBtn.setBackground(new java.awt.Color(255, 255, 255));
        addGradeBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addGradeBtn.setForeground(new java.awt.Color(0, 0, 54));
        addGradeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add grade.png"))); // NOI18N
        addGradeBtn.setText("Add Grade");
        addGradeBtn.setBorderPainted(false);
        addGradeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addGradeBtnMouseClicked(evt);
            }
        });
        addGradeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGradeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addGradeBtn);
        addGradeBtn.setBounds(10, 290, 190, 40);

        testBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        testBox.setForeground(new java.awt.Color(0, 0, 54));
        testBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ds", "Exam", "Tp" }));
        testBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(testBox);
        testBox.setBounds(220, 290, 110, 40);

        studentInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Subject", "Ds", "Exam", "Tp", "Average"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentInfoTable.setAlignmentX(1.0F);
        studentInfoTable.setAlignmentY(1.0F);
        jScrollPane1.setViewportView(studentInfoTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 150, 770, 100);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/bleu.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-10, 0, 780, 410);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calculateBtnActionPerformed

    private void addGradeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGradeBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addGradeBtnActionPerformed

    private void addGradeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addGradeBtnMouseClicked
        String  testName=(String) testBox.getSelectedItem();
        String subjectName = (String) subjectsBox.getSelectedItem();
        try
        {
        float grade=Float.parseFloat(gradeField.getText());
        if(!(grade <= 20 && grade>=0)) 
        {
        JOptionPane.showMessageDialog(null, "Enter a number between 0 and 20 for a grade");
        return;
        }
        try{
        PreparedStatement stmt;
        ResultSet result;
        stmt=conn.prepareStatement("Select id from subject where subjectName = ?");
        stmt.setString(1,subjectName);
        result =stmt.executeQuery();
        result.next();
        int subjectId = result.getInt("id");
       stmt= conn.prepareStatement("SELECT count(*) from note where studentId = ? and subjectId = ?");
            stmt.setInt(1,this.studentId);
            stmt.setInt(2, subjectId);
            result=stmt.executeQuery();
            result.next();
            if (result.getInt("count(*)")!=0)
            {
                switch(testName)
                {
                    case "Ds":
                        stmt=conn.prepareStatement("Update note set dsGrade = ? where studentId = ? and subjectId = ?");
                        stmt.setFloat(1,grade);
                        stmt.setInt(2,this.studentId);
                        stmt.setInt(3, subjectId);
                        stmt.executeUpdate();
                      getGradesData();
                        break;
                    case "Exam":
                        stmt=conn.prepareStatement("Update note set examGrade = ? where studentId = ? and subjectId = ?");
                        stmt.setFloat(1,grade);
                        stmt.setInt(2,this.studentId);
                        stmt.setInt(3, subjectId);
                        stmt.executeUpdate();
                      getGradesData();
                        break;
                   case "Tp":
stmt = conn.prepareStatement("Select hasTp from subject where id = ?");
stmt.setInt(1, subjectId);
result = stmt.executeQuery();
result.next();
int hasTp = result.getInt("hasTp");
if(hasTp == 1)
{
stmt = conn.prepareStatement("Update note set tpGrade = ? where studentId = ? and subjectId = ?");
stmt.setFloat(1, grade);
stmt.setInt(2, this.studentId);
stmt.setInt(3, subjectId);
stmt.executeUpdate();
getGradesData();
break;
}
else
{
JOptionPane.showMessageDialog(null, "Subject Has No Tp Test");
return;
}
                }
            }
            else
            {  switch(testName)
                {
                    case "Ds":
                        stmt=conn.prepareStatement("insert into note(studentId, subjectId, dsGrade) values (?, ?, ?)");
                        stmt.setInt(1,this.studentId);
                        stmt.setInt(2,subjectId);
                        stmt.setFloat(3, grade);
                        stmt.executeUpdate();
                      getGradesData();
                        break;
                    case "Exam":
                        stmt=conn.prepareStatement("insert into note(studentId, subjectId, examGrade) values (?, ?, ?)");
                        stmt.setInt(1,this.studentId);
                        stmt.setInt(2,subjectId);
                        stmt.setFloat(3, grade);
                        stmt.executeUpdate();
                      getGradesData();
                        break;
                   case "Tp":
stmt = conn.prepareStatement("Select hasTp from subject where id = ?");
stmt.setInt(1, subjectId);
result = stmt.executeQuery();
result.next();
int hasTp = result.getInt("hasTp");
if(hasTp == 1)
{
stmt = conn.prepareStatement("insert into note(studentId, subjectId, tpGrade) values(?, ?, ?)");
stmt.setInt(1, this.studentId);
stmt.setInt(2, subjectId);
stmt.setFloat(3, grade);
stmt.executeUpdate();
getGradesData();
break;
}
else
{
JOptionPane.showMessageDialog(null, "Subject Has No Tp Test");
return;
        }
                }
                
            }
               }
        
        catch(Exception e )
        {
            JOptionPane.showMessageDialog(null,e);
        }
        }
        catch(Exception e )
        {
            JOptionPane.showMessageDialog(null,"Enter a number between 0 and 20 for grade ");
        }
    }//GEN-LAST:event_addGradeBtnMouseClicked

    private void calculateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateBtnMouseClicked
// TODO add your handling code here:
String testName = (String) testBox.getSelectedItem();
String subjectName = (String) subjectsBox.getSelectedItem();
try
{
PreparedStatement stmt;
ResultSet result;
stmt = conn.prepareStatement("Select id from subject where subjectName = ?");
stmt.setString(1, subjectName);
result = stmt.executeQuery();
result.next();
int subjectId = result.getInt("id");
stmt = conn.prepareStatement("SELECT count(*) from note where studentId = ? and subjectId = ?");
stmt.setInt(1, this.studentId);
stmt.setInt(2, subjectId);
result = stmt.executeQuery();
result.next();
if(result.getInt("count(*)")==0)
{

JOptionPane.showMessageDialog(null, "student has no grades in the subject " + subjectName);
}
else
{
stmt = conn.prepareStatement("SELECT * from note where studentId = ? and subjectId = ?");
stmt.setInt(1, this.studentId);
stmt.setInt(2, subjectId);
result = stmt.executeQuery();
result.next();
float dsGrade = result.getFloat("dsGrade");
float examGrade = result.getFloat("examGrade");
float tpGrade = result.getFloat("tpGrade");
stmt = conn.prepareStatement("SELECT hasTp from subject where id = ?");
stmt.setInt(1, subjectId);
result = stmt.executeQuery();
result.next();
int hasTp = result.getInt("hasTp");

if(hasTp==1)

{
stmt = conn.prepareStatement("update note set average = ? where subjectId = ? and studentId = ?");
float grade = (dsGrade * (float)0.1) + (examGrade * (float)0.7) + (tpGrade * (float)0.2);
stmt.setFloat(1, grade);
stmt.setInt(2, subjectId);
stmt.setInt(3, this.studentId);
stmt.executeUpdate();
getGradesData();
}
else

{
stmt = conn.prepareStatement("update note set average = ? where subjectId = ? and studentId = ?");
float grade = (dsGrade * (float)0.1) + (examGrade * (float)0.9);
stmt.setFloat(1, grade);
stmt.setInt(2, subjectId);
stmt.setInt(3, this.studentId);
stmt.executeUpdate();
getGradesData();
        }
}

}
catch(Exception e )
        {
JOptionPane.showMessageDialog(null, e);
        }   
    }//GEN-LAST:event_calculateBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gradePageAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gradePageAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gradePageAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gradePageAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gradePageAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGradeBtn;
    private javax.swing.JButton calculateBtn;
    private javax.swing.JTextField gradeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable studentInfoTable;
    private javax.swing.JLabel studentLabel;
    private javax.swing.JComboBox<String> subjectsBox;
    private javax.swing.JComboBox<String> testBox;
    // End of variables declaration//GEN-END:variables
}
